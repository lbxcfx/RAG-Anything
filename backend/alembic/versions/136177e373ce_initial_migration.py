"""Initial migration

Revision ID: 136177e373ce
Revises: 
Create Date: 2025-10-03 13:23:20.334984

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '136177e373ce'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('model_configs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('model_type', sa.Enum('LLM', 'VLM', 'EMBEDDING', 'RERANK', name='modeltype'), nullable=False),
    sa.Column('provider', sa.String(length=100), nullable=False),
    sa.Column('model_name', sa.String(length=255), nullable=False),
    sa.Column('api_key', sa.String(length=500), nullable=True),
    sa.Column('api_base_url', sa.String(length=500), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_model_configs_id'), 'model_configs', ['id'], unique=False)
    op.create_table('knowledge_bases',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('parser_type', sa.Enum('MINERU', 'DOCLING', name='parsertype'), nullable=True),
    sa.Column('parse_method', sa.String(length=50), nullable=True),
    sa.Column('enable_image_processing', sa.Boolean(), nullable=True),
    sa.Column('enable_table_processing', sa.Boolean(), nullable=True),
    sa.Column('enable_equation_processing', sa.Boolean(), nullable=True),
    sa.Column('llm_model_id', sa.Integer(), nullable=True),
    sa.Column('vlm_model_id', sa.Integer(), nullable=True),
    sa.Column('embedding_model_id', sa.Integer(), nullable=True),
    sa.Column('working_dir', sa.String(length=500), nullable=True),
    sa.Column('vector_collection_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['embedding_model_id'], ['model_configs.id'], ),
    sa.ForeignKeyConstraint(['llm_model_id'], ['model_configs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['vlm_model_id'], ['model_configs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_knowledge_bases_id'), 'knowledge_bases', ['id'], unique=False)
    op.create_table('chat_sessions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=True),
    sa.Column('knowledge_base_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['knowledge_base_id'], ['knowledge_bases.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_sessions_id'), 'chat_sessions', ['id'], unique=False)
    op.create_table('documents',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('filename', sa.String(length=500), nullable=False),
    sa.Column('original_path', sa.String(length=1000), nullable=False),
    sa.Column('file_size', sa.BigInteger(), nullable=True),
    sa.Column('file_type', sa.String(length=100), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PARSING', 'ANALYZING', 'BUILDING_GRAPH', 'EMBEDDING', 'COMPLETED', 'FAILED', name='documentstatus'), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('parsed_path', sa.String(length=1000), nullable=True),
    sa.Column('text_count', sa.Integer(), nullable=True),
    sa.Column('image_count', sa.Integer(), nullable=True),
    sa.Column('table_count', sa.Integer(), nullable=True),
    sa.Column('equation_count', sa.Integer(), nullable=True),
    sa.Column('entity_count', sa.Integer(), nullable=True),
    sa.Column('relation_count', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.String(length=255), nullable=True),
    sa.Column('knowledge_base_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['knowledge_base_id'], ['knowledge_bases.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=False)
    op.create_table('chat_messages',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('multimodal_content', sa.JSON(), nullable=True),
    sa.Column('query_mode', sa.Enum('HYBRID', 'LOCAL', 'GLOBAL', 'NAIVE', name='querymode'), nullable=True),
    sa.Column('vlm_enhanced', sa.String(length=10), nullable=True),
    sa.Column('sources', sa.JSON(), nullable=True),
    sa.Column('response_time', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_messages_id'), 'chat_messages', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_chat_messages_id'), table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_table('documents')
    op.drop_index(op.f('ix_chat_sessions_id'), table_name='chat_sessions')
    op.drop_table('chat_sessions')
    op.drop_index(op.f('ix_knowledge_bases_id'), table_name='knowledge_bases')
    op.drop_table('knowledge_bases')
    op.drop_index(op.f('ix_model_configs_id'), table_name='model_configs')
    op.drop_table('model_configs')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
